diff --git a/node_modules/@adminjs/nestjs/build/admin.module.js b/node_modules/@adminjs/nestjs/build/admin.module.js
index e99b4f9..86ad837 100644
--- a/node_modules/@adminjs/nestjs/build/admin.module.js
+++ b/node_modules/@adminjs/nestjs/build/admin.module.js
@@ -70,7 +70,7 @@ let AdminModule = AdminModule_1 = class AdminModule {
         const admin = new AdminJS(adminJSOptions);
         admin.watch();
         const { httpAdapter } = this.httpAdapterHost;
-        this.loader.register(admin, httpAdapter, {
+        await this.loader.register(admin, httpAdapter, {
             ...this.adminModuleOptions,
             adminJsOptions: admin.options,
         });
diff --git a/node_modules/@adminjs/nestjs/build/loaders/express.loader.js b/node_modules/@adminjs/nestjs/build/loaders/express.loader.js
index 5d9267c..c2aeb8e 100644
--- a/node_modules/@adminjs/nestjs/build/loaders/express.loader.js
+++ b/node_modules/@adminjs/nestjs/build/loaders/express.loader.js
@@ -30,23 +30,23 @@ let ExpressLoader = class ExpressLoader extends AbstractLoader {
         let jsonParser = [];
         let urlencodedParser = [];
         let admin = [];
-        if (app && app._router && app._router.stack) {
-            const jsonParserIndex = app._router.stack.findIndex((layer) => layer.name === 'jsonParser');
+        if (app && app.router && app.router.stack) {
+            const jsonParserIndex = app.router.stack.findIndex((layer) => layer.name === 'jsonParser');
             if (jsonParserIndex >= 0) {
-                jsonParser = app._router.stack.splice(jsonParserIndex, 1);
+                jsonParser = app.router.stack.splice(jsonParserIndex, 1);
             }
-            const urlencodedParserIndex = app._router.stack.findIndex((layer) => layer.name === 'urlencodedParser');
+            const urlencodedParserIndex = app.router.stack.findIndex((layer) => layer.name === 'urlencodedParser');
             if (urlencodedParserIndex >= 0) {
-                urlencodedParser = app._router.stack.splice(urlencodedParserIndex, 1);
+                urlencodedParser = app.router.stack.splice(urlencodedParserIndex, 1);
             }
-            const adminIndex = app._router.stack.findIndex((layer) => layer.name === 'admin');
+            const adminIndex = app.router.stack.findIndex((layer) => layer.name === 'admin');
             if (adminIndex >= 0) {
-                admin = app._router.stack.splice(adminIndex, 1);
+                admin = app.router.stack.splice(adminIndex, 1);
             }
-            const corsIndex = app._router.stack.findIndex((layer) => layer.name === 'corsMiddleware');
-            const expressInitIndex = app._router.stack.findIndex((layer) => layer.name === 'expressInit');
+            const corsIndex = app.router.stack.findIndex((layer) => layer.name === 'corsMiddleware');
+            const expressInitIndex = app.router.stack.findIndex((layer) => layer.name === 'expressInit');
             const initIndex = (corsIndex >= 0 ? corsIndex : expressInitIndex) + 1;
-            app._router.stack.splice(initIndex, 0, ...admin, ...jsonParser, ...urlencodedParser);
+            app.router.stack.splice(initIndex, 0, ...admin, ...jsonParser, ...urlencodedParser);
         }
     }
 };
diff --git a/node_modules/@adminjs/nestjs/src/admin.module.ts b/node_modules/@adminjs/nestjs/src/admin.module.ts
index 7fc4ae6..ba66ad6 100644
--- a/node_modules/@adminjs/nestjs/src/admin.module.ts
+++ b/node_modules/@adminjs/nestjs/src/admin.module.ts
@@ -138,7 +138,7 @@ export class AdminModule implements OnModuleInit {
     admin.watch();

     const { httpAdapter } = this.httpAdapterHost;
-    this.loader.register(admin, httpAdapter, {
+    await this.loader.register(admin, httpAdapter, {
       ...this.adminModuleOptions,
       adminJsOptions: admin.options,
     });
diff --git a/node_modules/@adminjs/nestjs/src/loaders/express.loader.ts b/node_modules/@adminjs/nestjs/src/loaders/express.loader.ts
index 00f235b..6b8c142 100644
--- a/node_modules/@adminjs/nestjs/src/loaders/express.loader.ts
+++ b/node_modules/@adminjs/nestjs/src/loaders/express.loader.ts
@@ -58,43 +58,43 @@ export class ExpressLoader extends AbstractLoader {
     // Nestjs uses bodyParser under the hood which is in conflict with adminjs setup.
     // Due to adminjs-expressjs usage of formidable we have to move body parser in layer tree after adminjs init.
     // Notice! This is not documented feature of express, so this may change in the future. We have to keep an eye on it.
-    if (app && app._router && app._router.stack) {
-      const jsonParserIndex = app._router.stack.findIndex(
+    if (app && app.router && app.router.stack) {
+      const jsonParserIndex = app.router.stack.findIndex(
         (layer: { name: string }) => layer.name === 'jsonParser',
       );
       if (jsonParserIndex >= 0) {
-        jsonParser = app._router.stack.splice(jsonParserIndex, 1);
+        jsonParser = app.router.stack.splice(jsonParserIndex, 1);
       }

-      const urlencodedParserIndex = app._router.stack.findIndex(
+      const urlencodedParserIndex = app.router.stack.findIndex(
         (layer: { name: string }) => layer.name === 'urlencodedParser',
       );
       if (urlencodedParserIndex >= 0) {
-        urlencodedParser = app._router.stack.splice(urlencodedParserIndex, 1);
+        urlencodedParser = app.router.stack.splice(urlencodedParserIndex, 1);
       }

-      const adminIndex = app._router.stack.findIndex(
+      const adminIndex = app.router.stack.findIndex(
         (layer: { name: string }) => layer.name === 'admin',
       );
       if (adminIndex >= 0) {
-        admin = app._router.stack.splice(adminIndex, 1);
+        admin = app.router.stack.splice(adminIndex, 1);
       }

       // if adminjs-nestjs didn't reorder the middleware
       // the body parser would have come after corsMiddleware
-      const corsIndex = app._router.stack.findIndex(
+      const corsIndex = app.router.stack.findIndex(
         (layer: { name: string }) => layer.name === 'corsMiddleware',
       );

       // in other case if there is no corsIndex we go after expressInit, because right after that
       // there are nest endpoints.
-      const expressInitIndex = app._router.stack.findIndex(
+      const expressInitIndex = app.router.stack.findIndex(
         (layer: { name: string }) => layer.name === 'expressInit',
       );

       const initIndex = (corsIndex >= 0 ? corsIndex : expressInitIndex) + 1;

-      app._router.stack.splice(
+      app.router.stack.splice(
         initIndex,
         0,
         ...admin,
diff --git a/node_modules/@adminjs/nestjs/package.json b/node_modules/@adminjs/nestjs/package.json
index 0a38bdc..193247f 100644
--- a/node_modules/@adminjs/nestjs/package.json
+++ b/node_modules/@adminjs/nestjs/package.json
@@ -5,6 +5,7 @@
   "exports": {
     ".": {
       "import": "./build/index.js",
+      "require": "./build/index.js",
       "types": "./types/index.d.ts"
     }
   },
