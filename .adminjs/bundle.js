(function (React, designSystem, styledComponents, adminjs, reactRedux) {
  'use strict';

  function _interopDefault (e) { return e && e.__esModule ? e : { default: e }; }

  var React__default = /*#__PURE__*/_interopDefault(React);

  const ANONYMOUS = 'anonimous';

  // @ts-ignore
  const RoleLabel = ({
    record,
    property
  }) => {
    const [levelName, setLevelName] = React__default.default.useState(ANONYMOUS);
    React__default.default.useEffect(() => {
      const levelId = record.params[property.name];
      if (levelId) {
        fetch(`/api/resources/roles/records/${levelId}/show`).then(res => res.json()).then(data => data.record).then(level => {
          if (level && level.title) {
            setLevelName(level.title);
          }
        }).catch(() => {
          setLevelName(ANONYMOUS);
        });
      } else {
        setLevelName(ANONYMOUS);
      }
    }, [record]);
    return /*#__PURE__*/React__default.default.createElement("span", null, levelName);
  };

  const Wrapper$1 = styledComponents.styled.div`
  display: flex;
  flex-direction: column;
  align-items: center;
  height: 100%;
  justify-content: center;
`;
  const Form = styledComponents.styled.form`
  min-width: 320px;
`;
  const Login = () => {
    const {
      __APP_STATE__: props
    } = window;
    const {
      action,
      errorMessage: message
    } = props;
    const {
      translateComponent,
      translateMessage,
      translateButton
    } = adminjs.useTranslation();
    return /*#__PURE__*/React__default.default.createElement(Wrapper$1, null, /*#__PURE__*/React__default.default.createElement(Form, {
      action: action,
      method: "POST"
    }, message && /*#__PURE__*/React__default.default.createElement(designSystem.MessageBox, {
      my: "lg",
      message: message.split(' ').length > 1 ? message : translateMessage(message),
      variant: "danger"
    }), /*#__PURE__*/React__default.default.createElement(designSystem.FormGroup, null, /*#__PURE__*/React__default.default.createElement(designSystem.Label, {
      required: true
    }, translateComponent('Login.properties.email')), /*#__PURE__*/React__default.default.createElement(designSystem.Input, {
      name: "email",
      placeholder: translateComponent('Login.properties.email'),
      required: true
    })), /*#__PURE__*/React__default.default.createElement(designSystem.FormGroup, null, /*#__PURE__*/React__default.default.createElement(designSystem.Label, {
      required: true
    }, translateComponent('Login.properties.password')), /*#__PURE__*/React__default.default.createElement(designSystem.Input, {
      type: "password",
      name: "password",
      placeholder: translateComponent('Login.properties.password'),
      required: true,
      autoComplete: "new-password"
    })), /*#__PURE__*/React__default.default.createElement(designSystem.Text, {
      mt: "xl",
      textAlign: "center"
    }, /*#__PURE__*/React__default.default.createElement(designSystem.Button, {
      variant: "contained"
    }, translateComponent('Login.loginButton')))), /*#__PURE__*/React__default.default.createElement(designSystem.Text, {
      mt: "xl",
      textAlign: "center"
    }, translateMessage('registrationLinkMessage'), /*#__PURE__*/React__default.default.createElement("a", {
      href: "/register"
    }, translateButton('register'))));
  };

  const SIDEBAR_Z_INDEX = 50;
  const StyledSidebar = styledComponents.styled(designSystem.Box)`
  top: 0;
  bottom: 0;
  overflow-y: auto;
  width: 300px;
  border-right: 1px solid #e5e7eb;
  display: flex;
  flex-direction: column;
  flex-shrink: 0;
  z-index: ${SIDEBAR_Z_INDEX};
  background: #ffffff;

  transition: left 0.25s ease-in-out;

  &.hidden {
    left: -300px;
  }
  &.visible {
    left: 0;
  }
`;
  const Sidebar = ({
    isVisible
  }) => {
    const resources = reactRedux.useSelector(state => state.resources);
    const elements = adminjs.useNavigationResources(resources);
    elements.unshift({
      label: 'dashboard',
      href: '/',
      icon: 'Home'
    });
    return /*#__PURE__*/React__default.default.createElement(StyledSidebar, {
      className: isVisible ? 'visible' : 'hidden',
      "data-css": "sidebar"
    }, /*#__PURE__*/React__default.default.createElement(designSystem.Box, {
      flexGrow: 1,
      className: designSystem.cssClass('Resources'),
      "data-css": "sidebar-resources"
    }, /*#__PURE__*/React__default.default.createElement(designSystem.Navigation, {
      elements: elements
    })));
  };

  const Wrapper = styledComponents.styled(designSystem.Box)`
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
`;
  const Dashboard = () => {
    const {
      translateMessage
    } = adminjs.useTranslation();
    return /*#__PURE__*/React__default.default.createElement(Wrapper, null, /*#__PURE__*/React__default.default.createElement(designSystem.Header.H2, null, translateMessage('welcomeOnBoard_title')), /*#__PURE__*/React__default.default.createElement(designSystem.Text, {
      variant: "sm",
      mb: 5
    }, translateMessage('welcomeOnBoard_subtitle')));
  };

  const uploadField = props => {
    const {
      property
    } = props;
    return /*#__PURE__*/React__default.default.createElement(React__default.default.Fragment, null, /*#__PURE__*/React__default.default.createElement(designSystem.Label, {
      required: true,
      label: "Upload"
    }, property.label ?? 'Image'), /*#__PURE__*/React__default.default.createElement(designSystem.DropZone, {
      translations: {
        acceptedSize: 'Max size: {{maxSize}}',
        acceptedType: 'Supports: {{mimeTypes}}',
        placeholder: 'Drop your file here, or click to browse',
        unsupportedSize: 'File {{fileName}} is too big',
        unsupportedType: 'File {{fileName}} has unsupported type: {{fileType}}'
      },
      uploadLimitIn: "MB",
      validate: {
        maxSize: 10240000,
        mimeTypes: ['image/png', 'image/jpeg']
      }
    }));
  };

  const uploadMultipleField = props => {
    console.log({
      props
    });
    return /*#__PURE__*/React__default.default.createElement(React__default.default.Fragment, null, /*#__PURE__*/React__default.default.createElement(designSystem.Label, {
      required: true,
      label: "Upload"
    }, "Images"), /*#__PURE__*/React__default.default.createElement(designSystem.DropZone, {
      translations: {
        acceptedSize: 'Max size: {{maxSize}}',
        acceptedType: 'Supports: {{mimeTypes}}',
        placeholder: 'Drop your file here, or click to browse',
        unsupportedSize: 'File {{fileName}} is too big',
        unsupportedType: 'File {{fileName}} has unsupported type: {{fileType}}'
      },
      uploadLimitIn: "MB",
      multiple: true,
      validate: {
        maxSize: 10240000,
        mimeTypes: ['image/png', 'image/jpeg']
      }
    }));
  };

  AdminJS.UserComponents = {};
  AdminJS.UserComponents.RoleLabel = RoleLabel;
  AdminJS.UserComponents.Login = Login;
  AdminJS.UserComponents.Sidebar = Sidebar;
  AdminJS.UserComponents.Dashboard = Dashboard;
  AdminJS.UserComponents.UploadField = uploadField;
  AdminJS.UserComponents.UploadMultipleField = uploadMultipleField;

})(React, AdminJSDesignSystem, styled, AdminJS, ReactRedux);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
